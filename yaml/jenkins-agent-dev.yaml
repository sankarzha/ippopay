apiVersion: v1
kind: Pod
spec:
  serviceAccountName: //service Account name in aws
  imagePullSecrets: [ 'artifactory-appname-dev' ]
  containers:
    - name: react-build
      image: node:16-alpine:latest
      tty: true
      resources:
        requests:
          cpu: 1400m
          memory: 4096Mi
        limits:
          cpu: 2000m
          memory: 8192Mi
      command:
        - /bin/bash
        - -c
        - |
          npm install && npm run build
    - name: "jnlp"
      resources:
        requests:
          cpu: 200m
          memory: 400Mi
        limits:
          cpu: 400m
          memory: 800Mi
    - name: awscli
      image: art.jfrog.com/dockerhub/amazon/aws-cli
      resources:
        requests:
          cpu: 200m
          memory: 400Mi
        limits:
          cpu: 400m
          memory: 1800Mi
      command:
        - cat
      tty: true
    - name: aquacli
      image: art.jfrog.com/app-docker-artifacts/aquacli:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 200m
          memory: 400Mi
        limits:
          cpu: 400m
          memory: 800Mi
      tty: true
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: "/podman/.docker"
          name: "jenkins-docker-cfg"
          readOnly: false
    - name: podman
      image: art.jfrog.com/pmi-docker-artifacts/podman:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 200m
          memory: 800Mi
        limits:
          cpu: 400m
          memory: 1800Mi
      tty: true
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: "/podman/.docker"
          name: "jenkins-docker-cfg"
          readOnly: false
  volumes:
    - name: jenkins-docker-cfg
      projected:
        sources:
          - secret:
              name: artifactory-corp-dev
              items:
                - key: .dockerconfigjson
                  path: auth.json
  securityContext:
    runAsUser: 0
    fsGroup: 0